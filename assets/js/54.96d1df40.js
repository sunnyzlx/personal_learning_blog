(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{412:function(t,a,s){"use strict";s.r(a);var r=s(44),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("ul",[s("li",[t._v("数组是一种静态的数据结构，新建完成则内存固定")]),t._v(" "),s("li",[t._v("优点，利用数组在内存中的连续存储特性，可方便的读取指定索引的数据")]),t._v(" "),s("li",[t._v("缺点，在插入和删除数据时复杂度较高")])]),t._v(" "),s("h2",{attrs:{id:"链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),s("ul",[s("li",[t._v("链表是一种动态的数据结构，不需要做扩容 202 206 141 142")]),t._v(" "),s("li",[t._v("单向链表，双向链表，环形链表，跳表（空间换时间）")])])])}),[],!1,null,null,null);a.default=e.exports}}]);