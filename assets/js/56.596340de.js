(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{414:function(n,t,e){"use strict";e.r(t);var s=e(44),a=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h3",{attrs:{id:"三数之和-15"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三数之和-15"}},[n._v("#")]),n._v(" 三数之和（15）")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var threeSum1 = function(nums) {\n  let res = []\n      let length = nums.length;\n      nums.sort((a, b) => a - b) // 先排个队，最左边是最弱（小）的，最右边是最强(大)的\n      if (nums[0] <= 0 && nums[length - 1] >= 0) { // 优化1: 整个数组同符号，则无解\n        for (let i = 0; i < length - 2;) {\n          if (nums[i] > 0) break; // 优化2: 最左值为正数则一定无解\n          let first = i + 1\n          let last = length - 1\n          do {\n            if (first >= last || nums[i] * nums[last] > 0) break // 两人选相遇，或者三人同符号，则退出\n            let result = nums[i] + nums[first] + nums[last]\n            if (result === 0) { // 如果可以组队\n              res.push([nums[i], nums[first], nums[last]])\n            }\n            if (result <= 0 ) { // 实力太弱，把菜鸟那边右移一位\n              while (first < last && nums[first] === nums[++first]){} // 如果相等就跳过\n            } else { // 实力太强，把大神那边右移一位\n              while (first < last && nums[last] === nums[--last]) {}\n            }\n          } while (first < last)\n          while (nums[i] === nums[++i]) {}\n        }\n      }\n      return res\n};\nlet ret = []\n  let len = nums.length\n  if(nums==null||len<3) return ret;\n  nums.sort((a,b)=>a-b)\n  for(let i=0;i<len;i++){\n    if(nums[i]>0) break;\n    if(i>0 && nums[i]==nums[i-1]) continue;\n    let L=i+1\n    let R=len-1\n    while(L<R){\n      const sum = nums[i]+nums[L]+nums[R]\n      if(sum===0){\n        ret.push([nums[i],nums[L],nums[R]])\n        while(L<R&&nums[L]===nums[L+1]) L++\n        while(L<R&&nums[R]===nums[R-1]) R--\n        L++\n        R--\n      }\n      else if(sum<0) L++\n      else if(sum>0) R--\n    }\n  }\n  return ret\n")])])]),e("h3",{attrs:{id:"两数相加-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#两数相加-2"}},[n._v("#")]),n._v(" 两数相加（2）")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var addTwoNumbers = function(l1, l2) {\n  let node = new ListNode('head')\n  let cur = node, sum, n=0;\n  while(l1||l2){\n    let n1 = l1?l1.val:0\n    let n2 = l2?l2.val:0\n    sum = n1+n2+n\n    cur.next = new ListNode(sum%10)\n    cur = cur.next\n    n = parseInt(sum/10)\n    if(l1) l1 = l1.next\n    if(l2) l2 = l2.next\n  }\n  if(n>0) cur.next = new ListNode(n)\n  return node.next\n};\n")])])]),e("h3",{attrs:{id:"两整数之和-371"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#两整数之和-371"}},[n._v("#")]),n._v(" 两整数之和（371）")]),n._v(" "),e("ul",[e("li",[n._v("计算二进制值相加： 5---101，7---111")]),n._v(" "),e("li",[n._v("第一步：相加各位的值，不算进位，得到010，二进制每位相加就相当于各位做异或操作，101^111。")]),n._v(" "),e("li",[n._v("第二步：计算进位值，得到1010，相当于各位进行与操作得到101，再向左移一位得到1010，(101&111)<<1。")]),n._v(" "),e("li",[n._v("第三步重复上述两步，各位相加 010^1010=1000，进位值为100=(010 & 1010)<<1。")]),n._v(" "),e("li",[n._v("继续重复上述两步：1000^100 = 1100，进位值为0，跳出循环，1100为最终结果。\n结束条件：进位为0，即a为最终的求和结果。")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var getSum = function(a, b) {\n  while(b!==0){\n    let tmp = a^b //获取各位相加的值， 做异或\n    b = (a&b)<<1  //获取进位值，与操作，再左移一位\n    a = tmp\n  }\n  return a\n};\n")])])]),e("h3",{attrs:{id:"js-实现两个大数相加"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-实现两个大数相加"}},[n._v("#")]),n._v(" JS 实现两个大数相加")]),n._v(" "),e("ul",[e("li",[n._v("https://zhuanlan.zhihu.com/p/72179476")]),n._v(" "),e("li",[n._v("https://blog.csdn.net/qq_29393273/article/details/100154990?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-19-100154990.nonecase&utm_term=js%E5%B0%8F%E6%95%B0%E7%9B%B8%E5%8A%A0")]),n._v(" "),e("li",[n._v("https://www.cnblogs.com/qixianchuan/p/11162506.html")]),n._v(" "),e("li",[n._v("原理")]),n._v(" "),e("li",[n._v("JavaScript 安全整数 是 -253-1 ~ 253-1 ，即: -9007199254740991 ~ 9007199254740991; 换句话说，整数超过这个范围就会丢失精度，那超过这个范围的基本运算也别指望有多精确了;")]),n._v(" "),e("li",[n._v('换一种思路，用字符串表示数字，比如 "9007199254740999"，不存在四舍五入精度丢失的问题，这样不管数值多大都没影响;')]),n._v(" "),e("li",[n._v("用数字表示字符串之后，那么数字的运算就转换成字符串的运算;")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('let a = "9007199254740991";\nlet b = "1234567899999999999";\nfunction add2(a ,b){\n  //取两个数字的最大长度\n  let maxLength = Math.max(a.length, b.length);\n  //用0去补齐长度\n  a = a.padStart(maxLength , 0);//"0009007199254740991"\n  b = b.padStart(maxLength , 0);//"1234567899999999999"\n  //定义加法过程中需要用到的变量\n  let t = 0;\n  let f = 0;   //"进位"\n  let sum = "";\n  for(let i=maxLength-1 ; i>=0 ; i--){\n     t = parseInt(a[i]) + parseInt(b[i]) + f;\n     f = Math.floor(t/10);\n     sum = t%10 + sum;\n  }\n  if(f == 1){\n     sum = "1" + sum;\n  }\n  return sum;\n}\nconsole.log(add1(a,b))\n\nconst add = (num1, num2) => {\n  // 获取最大长度\n  const len = Math.max(num1.length, num2.length);\n  // 对齐\n  num1 = num1.padStart(len, 0);\n  num2 = num2.padStart(len, 0);\n\n  let flag = 0；\n  let result = ``;\n  let temp = 0;\n  for(let i=len-1; i>=0;  i--){\n    temp = flag + parseInt(num1[i]) + parseInt(num2[i])\n    result = (temp%10) + result \n    flag = parseInt(temp/10)\n  }\n  // 判断是否进位\n  return result = (flag === 1 ? \'1\' : \'\') + result;\n}\nconst n1 = "9007199254740990"\nconst n2 = "1229007199254740993443"\n\nadd(n1, n2);\n // "1229016206453995734433"\n\n')])])])])}),[],!1,null,null,null);t.default=a.exports}}]);