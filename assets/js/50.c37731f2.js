(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{408:function(a,t,r){"use strict";r.r(t);var n=r(44),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"js算法例题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js算法例题"}},[a._v("#")]),a._v(" js算法例题")]),a._v(" "),r("h2",{attrs:{id:""}},[r("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")])]),a._v(" "),r("h5",{attrs:{id:"_7-字符串转驼峰"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-字符串转驼峰"}},[a._v("#")]),a._v(" 7.字符串转驼峰")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('var str="border-bottom-color";\nfunction Change(str){\n  var arr=str.split("-");\n  for(var i=1;i<arr.length;i++){\n    arr[i]=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);\n  }\n  str=arr.join("");\n  return str;\n}\nconsole.log(Change(str));//borderBottomColor\n')])])]),r("h5",{attrs:{id:"_8-查找字符串中出现次数最多的字符和次数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-查找字符串中出现次数最多的字符和次数"}},[a._v("#")]),a._v(" 8.查找字符串中出现次数最多的字符和次数")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('        var str="sdddrtkjsfkkkasjdddj";\n        var max=0;\n        var char;\n        function Search(str){\n            var json={};\n            for(var i=0;i<str.length;i++){\n                if(!json[str[i]]){\n                    json[str[i]]=str[i];\n                }\n                else{\n                    json[str[i]]+=str[i];\n                }\n            }\n\n            for(var i=0;i<str.length;i++){\n                if(json[str[i]].length>max){\n                    max=json[str[i]].length;\n                    char=str[i];\n                }\n            }\n            console.log("出现次数最多的字符是"+char+",出现了"+max+"次")\n        }\n        Search(str);\n')])])]),r("h5",{attrs:{id:"_9-如何写一个大数阶乘-递归的方法会出现什么问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-如何写一个大数阶乘-递归的方法会出现什么问题"}},[a._v("#")]),a._v(" 9.如何写一个大数阶乘？递归的方法会出现什么问题？")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("function factorial(n){\n   n > 1 ? n * factorial(n-1) : 1;\n}\n")])])]),r("p",[a._v("递归方法会有计算溢出的问题")]),a._v(" "),r("h5",{attrs:{id:"_10-知道的排序算法-说一下冒泡快排的原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-知道的排序算法-说一下冒泡快排的原理"}},[a._v("#")]),a._v(" 10.知道的排序算法 说一下冒泡快排的原理")]),a._v(" "),r("ul",[r("li",[a._v("冒泡排序：重复地走访过要排序的元素列，依次比较两个相邻的元素，如果他们的顺序（如从大到小、首字母从A到Z）错误就把他们交换过来。走访元素的工作是重复地进行直到没有相邻元素需要交换，也就是说该元素已经排序完成。")]),a._v(" "),r("li",[a._v("快速排序：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。")])]),a._v(" "),r("h5",{attrs:{id:"_11-heap排序方法的原理-复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-heap排序方法的原理-复杂度"}},[a._v("#")]),a._v(" 11.Heap排序方法的原理？复杂度？")]),a._v(" "),r("ul",[r("li",[a._v("堆排序（英语：Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。")]),a._v(" "),r("li",[a._v("复杂度：O (nlgn)")])]),a._v(" "),r("h5",{attrs:{id:"_12-说一下你了解的数据结构-区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-说一下你了解的数据结构-区别"}},[a._v("#")]),a._v(" 12.说一下你了解的数据结构 区别")]),a._v(" "),r("h5",{attrs:{id:"_13-几种常见的排序算法-手写"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-几种常见的排序算法-手写"}},[a._v("#")]),a._v(" 13.几种常见的排序算法，手写")]),a._v(" "),r("ul",[r("li",[a._v("基本排序算法：冒泡，选择，插入，希尔，归并，快排")]),a._v(" "),r("li",[a._v("冒泡排序：")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("function bubbleSort(data){\n  var temp=0;\n  for(var i=data.length;i>0;i--){\n    for(var j=0;j<i-1;j++){\n      if(data[j]>data[j+1]){\n        temp=data[j];\n        data[j]=data[j+1];\n        data[j+1]=temp;\n      }\n    }\n  }\n  return data;\n}\n")])])]),r("ul",[r("li",[a._v("选择排序：")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("function selectionSort(data){\n  for(var i=0;i<data.length;i++){\n    var min=data[i];\n    var temp;\n    for(var j=i+1;j<data.length;j++){\n      if(data[j]<min){\n        temp=data[j];\n        data[j]=min;\n        min=temp;\n      }\n    }\n    data[i]=min;\n  }\n  return data\n}\n")])])]),r("ul",[r("li",[a._v("插入排序：")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("function insertSort(data){\n  var len=data.length;\n  for(var i=0;i<len;i++){\n    var key=data[i];\n    var j=i-1;\n    while(j>=0&&data[j]>key){\n      data[j+1]=data[i];\n      j--;\n    }\n    data[j+1]=key;\n  }\n  return data;\n}\n\n")])])]),r("ul",[r("li",[a._v("希尔排序：")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("function shallSort(array) {\n  var increment = array.length;\n  var i\n  var temp; //暂存\n\n  do {\n  //设置增量\n    increment = Math.floor(increment / 3) + 1;\n    for (i = increment ; i < array.length; i++) {\n      if ( array[i] < array[i - increment]) {\n        temp = array[i];\n        for (var j = i - increment; j >= 0 && temp < array[j]; j -= increment) {\n          array[j + increment] = array[j];\n        }\n        array[j + increment] = temp;\n      }\n    }\n  }\n  while (increment > 1)\n  return array;\n}\n")])])]),r("ul",[r("li",[a._v("归并排序：")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("function mergeSort ( array ) {\nvar len = array.length;\nif( len < 2 ){\nreturn array;\n}\nvar middle = Math.floor(len / 2),\nleft = array.slice(0, middle),\nright = array.slice(middle);\nreturn merge(mergeSort(left), mergeSort(right));\n}\nfunction merge(left, right)\n{\nvar result = [];\nwhile (left.length && right.length) {\nif (left[0] <= right[0]) {\nresult.push(left.shift());\n} else {\nresult.push(right.shift());\n}\n}\nwhile (left.length)\nresult.push(left.shift());\nwhile (right.length)\nresult.push(right.shift());\nreturn result;\n}\n")])])]),r("ul",[r("li",[a._v("快速排序：")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("function quickSort(arr){\nif(arr.length==0)\nreturn [];\nvar left=[];\nvar right=[];\nvar pivot=arr[0];\nfor(var i=0;i<arr.length;i++){\nif(arr[i]<pivot){\nleft.push(arr[i]);\n}\nelse{\nright.push(arr[i]);\n}\n}\nreturn quickSort(left).concat(pivot,quickSort(right));\n}\n\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);