(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{426:function(v,_,i){"use strict";i.r(_);var l=i(44),t=Object(l.a)({},(function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h1",{attrs:{id:"react项目经验总结"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#react项目经验总结"}},[v._v("#")]),v._v(" react项目经验总结")]),v._v(" "),i("h2",{attrs:{id:"项目工程化"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#项目工程化"}},[v._v("#")]),v._v(" 项目工程化")]),v._v(" "),i("ul",[i("li",[v._v("目的：提高开发效率，降低维护成本")]),v._v(" "),i("li",[v._v("项目架构设计：项目主页，登陆页面，通用页面，三个是平级关系，项目主页左侧是菜单，右侧动态渲染数据需要周密设计，项目结构定义不好，会加大开发成本")]),v._v(" "),i("li",[v._v("目录结构设计：\n"),i("ul",[i("li",[v._v("提取公共配置放到config，置于为外层，菜单，字典")]),v._v(" "),i("li",[v._v("api调用封装，api目录，mock封装，component组件封装，styles")])])]),v._v(" "),i("li",[v._v("制定项目开发规范，eslint规范")]),v._v(" "),i("li",[v._v("模块化，组件化，模块化是更加细小的颗粒度，组件化是更粗一点，表格是一个组件，表格中的分页是模块")]),v._v(" "),i("li",[v._v("前后端接口规范，前端要做错误拦截，loading处理，公共机制")]),v._v(" "),i("li",[v._v("性能优化，自动化部署（压缩，合并，打包）流水化处理")]),v._v(" "),i("li",[v._v("项目的公共机制部分：\n架构设计，目录定义，路由封装，axios封装，错误拦截，loading封装，\n表单封装，表格封装，分页封装，header/footer封装,菜单封装，api封装，\n公共机制，公共样式，mock封装，noData封装")]),v._v(" "),i("li",[v._v("业务菜单，右面的标准页面一般包括查询表单，下面表格，开发时就可以只关心核心数据了")]),v._v(" "),i("li",[v._v("表单封装，下拉框，时间框，文本框，checkbox框，按钮等等常用组件框，提取公共部分，只需关注核心不同点，就可以满足大部分的业务")]),v._v(" "),i("li",[v._v("表单的封装，一块是纯粹的组件，还有一块是固定的业务组件，封装好以后，需要传递一个结构化的数据formList,一个handleFilter函数，接收baseForm传出来的数据，再引用一下baseForm即可，赋值，初始化值，查询，重置都封装好了")]),v._v(" "),i("li",[v._v("表单查询的结果进行封装，requestList专门对请求列表使用")]),v._v(" "),i("li",[v._v("axios统一的请求拦截，不会处理业务代码，对状态值进行拦截判断，在这里可以对loading做统一的处理")])]),v._v(" "),i("h2",{attrs:{id:"项目架构分析"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#项目架构分析"}},[v._v("#")]),v._v(" 项目架构分析")]),v._v(" "),i("ul",[i("li",[v._v("无服务端，利用mockServer实现前端json交互，只需关注前端开发即可")]),v._v(" "),i("li",[v._v("项目的核心框架库： React16, Router4.0, Redux")]),v._v(" "),i("li",[v._v("项目的中间件/插件： Axios, Map, Echarts, AntD")])]),v._v(" "),i("h3",{attrs:{id:"通用型强-可扩展性高的后台管理系统"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#通用型强-可扩展性高的后台管理系统"}},[v._v("#")]),v._v(" 通用型强，可扩展性高的后台管理系统")]),v._v(" "),i("ul",[i("li",[i("p",[v._v("react全家桶")]),v._v(" "),i("ul",[i("li",[v._v("React基础知识")]),v._v(" "),i("li",[v._v("React生命周期")]),v._v(" "),i("li",[v._v("React SPA页面语法讲解")]),v._v(" "),i("li",[v._v("React-Router4.0的基础知识")]),v._v(" "),i("li",[v._v("详细介绍路由匹配")]),v._v(" "),i("li",[v._v("使用hashHistory")]),v._v(" "),i("li",[v._v("在项目中运用动态路由")]),v._v(" "),i("li",[v._v("Redux 基础知识")]),v._v(" "),i("li",[v._v("Redux 框架集成应用")])])]),v._v(" "),i("li",[i("p",[v._v("AntD UI组件")]),v._v(" "),i("ul",[i("li",[v._v("表格列头单选/复选功能封装")]),v._v(" "),i("li",[v._v("AntD栅格/按钮/表单讲解")]),v._v(" "),i("li",[v._v("基于AntD弹框组件封装")]),v._v(" "),i("li",[v._v("基于AntD表格组件的封装")]),v._v(" "),i("li",[v._v("toast组件")]),v._v(" "),i("li",[v._v("notice组件")]),v._v(" "),i("li",[v._v("轮播组件")]),v._v(" "),i("li",[v._v("选项卡组件")])])]),v._v(" "),i("li",[i("p",[v._v("项目公共机制")]),v._v(" "),i("ul",[i("li",[v._v("axios封装/表格封装")]),v._v(" "),i("li",[v._v("公共组件Loading封装/分页封装")]),v._v(" "),i("li",[v._v("错误拦截/菜单封装")]),v._v(" "),i("li",[v._v("路由处理")]),v._v(" "),i("li",[v._v("日期/金额/手机号格式化")]),v._v(" "),i("li",[v._v("权限封装/表单封装")]),v._v(" "),i("li",[v._v("Mock集成/JSONP封装")]),v._v(" "),i("li",[v._v("天气调用")])])]),v._v(" "),i("li",[i("p",[v._v("可复用功能")]),v._v(" "),i("ul",[i("li",[v._v("后台系统整体架构设计")]),v._v(" "),i("li",[v._v("请求插件封装设计")]),v._v(" "),i("li",[v._v("登录页面总体布局和登录表单设计")]),v._v(" "),i("li",[v._v("首页卡片实现")]),v._v(" "),i("li",[v._v("基于Echart实现常用图表功能")]),v._v(" "),i("li",[v._v("基于百度Map SDK实现地图可视化常用功能")]),v._v(" "),i("li",[v._v("介绍图表组件的按需加载")]),v._v(" "),i("li",[v._v("车辆订单基础查询功能实现")]),v._v(" "),i("li",[v._v("用户列表功能实现")]),v._v(" "),i("li",[v._v("车辆列表基础功能实现")]),v._v(" "),i("li",[v._v("菜单渲染/权限控制")]),v._v(" "),i("li",[v._v("角色列表/创建角色/删除角色功能实现")])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);