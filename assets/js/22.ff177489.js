(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{383:function(t,e,i){"use strict";i.r(e);var n=i(44),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"window对象"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#window对象"}},[t._v("#")]),t._v(" window对象")]),t._v(" "),i("h2",{attrs:{id:"window对象的属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#window对象的属性"}},[t._v("#")]),t._v(" window对象的属性")]),t._v(" "),i("h3",{attrs:{id:"window-name"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#window-name"}},[t._v("#")]),t._v(" window.name")]),t._v(" "),i("ul",[i("li",[t._v("窗口的名字，字符串。默认为“”,这个属性主要配合超链接和表单的target属性使用")])]),t._v(" "),i("h3",{attrs:{id:"window-self-window-window"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#window-self-window-window"}},[t._v("#")]),t._v(" window.self,window.window")]),t._v(" "),i("ul",[i("li",[t._v("window.self和window.window属性都指向窗口本身。这两个属性只读")])]),t._v(" "),i("h3",{attrs:{id:"window-top-window-parent"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#window-top-window-parent"}},[t._v("#")]),t._v(" window.top, window.parent")]),t._v(" "),i("ul",[i("li",[t._v("window.top属性指向最顶层窗口，主要用于在框架窗口（frame）里面获取顶层窗口。")]),t._v(" "),i("li",[t._v("window.parent属性指向父窗口。如果当前窗口没有父窗口，window.parent指向自身。")]),t._v(" "),i("li",[t._v("对于不包含框架的网页，这两个属性等同于window对象")])]),t._v(" "),i("h3",{attrs:{id:"window-devicepixelratio"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#window-devicepixelratio"}},[t._v("#")]),t._v(" window.devicePixelRatio")]),t._v(" "),i("ul",[i("li",[t._v("返回一个数值,它表示一个 CSS 像素由多少个物理像素组成。它可以用于判断用户的显示环境，如果这个比率较大，就表示用户正在使用高清屏幕，因此可以显示较大像素的图片")])]),t._v(" "),i("h3",{attrs:{id:"位置大小属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#位置大小属性"}},[t._v("#")]),t._v(" 位置大小属性")]),t._v(" "),i("ul",[i("li",[t._v("window.screenX，window.screenY,返回浏览器窗口左上角相对于当前屏幕左上角的水平距离和垂直距离（单位像素）。这两个属性只读")]),t._v(" "),i("li",[t._v("window.innerHeight，window.innerWidth,返回网页在当前窗口中可见部分的高度和宽度，即“视口”（viewport）的大小（单位像素）,这两个属性只读,注意，这两个属性值包括滚动条的高度和宽度")]),t._v(" "),i("li",[t._v("window.outerHeight，window.outerWidth,属性返回浏览器窗口的高度和宽度，包括浏览器菜单和边框（单位像素）。这两个属性只读")]),t._v(" "),i("li",[t._v("window.scrollX属性返回页面的水平滚动距离，window.scrollY属性返回页面的垂直滚动距离，单位都为像素。这两个属性只读")]),t._v(" "),i("li",[t._v("window.pageXOffset属性和window.pageYOffset属性，是window.scrollX和window.scrollY别名")])]),t._v(" "),i("h2",{attrs:{id:"window-对象的方法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#window-对象的方法"}},[t._v("#")]),t._v(" window 对象的方法")]),t._v(" "),i("h3",{attrs:{id:"window-requestanimationframe"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#window-requestanimationframe"}},[t._v("#")]),t._v(" window.requestAnimationFrame")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("let element = document.getElementById('animate')\nelement.style.position = 'absolute'\n\nlet start = null\nfunction step(timestamp){\n  if(!start) start = timestamp\n  let progress = timestamp - start\n  element.style.left = Math.min(progress/10, 200)+'px'\n  if(progress<2000){\n    window.requestAnimationFrame(step)\n  }\n}\nwindow.requestAnimationFrame(step)\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);