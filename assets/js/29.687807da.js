(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{398:function(n,e,t){"use strict";t.r(e);var s=t(44),l=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("ul",[t("li",[n._v("https://juejin.im/post/5ac2fb886fb9a028b86e328c")]),n._v(" "),t("li",[n._v("简单版")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("class eventEmitter {\n  constructor(){\n    //存储事件\n    this._events = this._events || new Map()\n  }\n  // 监听事件\n  addListener(type,fn){\n    if(!this._events.get(type)){\n      this._events.set(type, fn)\n    }\n  }\n  //触发事件\n  emit(type){\n    let handler;\n    let args = [].slice.call(arguments, 1)\n    handler = this._events.get(type)\n    if(args.length>0){\n      handler.apply(this, args)\n    }else{\n      handler.call(this)\n    }\n    return true;\n  }\n}\n\n\n")])])]),t("ul",[t("li",[n._v("面试版")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("class eventEmitter {\n  constructor(){\n    this._events = this._events || new Map()\n  }\n\n  addListener(type,fn){\n    let handler = this._events.get(type)\n    if(!handler){\n       this._events.set(type,fn)\n    }else if(handler && typeof handler === 'function'){\n      this._events.set(type, [handler, fn])\n    }else{\n      handler.push(fn)\n    }\n  }\n  //用removeListener函数移除监听函数,但是匿名函数是无法移除的\n  removeListener(type,fn){\n    let handler = this._events.get(type)\n    if(handler && typeof handler === 'function'){\n      this._events.delete(type)\n    }else{\n      let index = handler.indexOf(fn)\n      if(index !== -1){\n        handler.splice(index,1)\n        if(handler.length === 1){\n          this._events.set(type, handler[0])\n        }\n      }else{\n        return this;\n      }\n    }\n  }\n  emit(type, ...arg){\n    let handler = this._events.get(type);\n    let emitHandler = function(fn, ...args){\n      if(args.length>0){\n        fn.apply(this, args)\n      }else{\n        fn.call(this)\n      }\n    }\n    if(Array.isArray(handler)){\n      for(let i=0,len=handler.length; i<len; i++){\n        emitHandler(handler[i], ...arg)\n      }\n    }else{\n      emitHandler(handler, ...arg)\n    }\n    return true\n  }\n  \n}\n\nconst emitter = new eventEmitter()\nfunction a1(man){\n  console.log(`expel ${man}`);\n}\nfunction b1(man){\n  console.log(`kill ${man}`);\n}\nemitter.addListener('arson', a1);\nemitter.addListener('arson', b1)\nemitter.removeListener('arson', a1)\n\nemitter.emit('arson', 'lee')\n")])])])])}),[],!1,null,null,null);e.default=l.exports}}]);