(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{445:function(l,a,t){"use strict";t.r(a);var e=t(44),s=Object(e.a)({},(function(){var l=this,a=l.$createElement,t=l._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[t("h1",{attrs:{id:"webpack性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack性能优化"}},[l._v("#")]),l._v(" webpack性能优化")]),l._v(" "),t("h2",{attrs:{id:"提升webpack打包速度的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提升webpack打包速度的方法"}},[l._v("#")]),l._v(" 提升webpack打包速度的方法")]),l._v(" "),t("ul",[t("li",[l._v("1.跟上技术的迭代(升级webpack后，node, npm, yarn的进行迭代)")]),l._v(" "),t("li",[l._v("2.在尽可能少的模块上应用loader\n"),t("ul",[t("li",[l._v("合理的使用exclude和include,可以降低loader的使用频率，但是对于图片处理就没有必要了，因为所有的图片都需要从src文件夹下移到dist文件夹下")])])]),l._v(" "),t("li",[l._v("3.plugin尽可能精简并确保可靠\n"),t("ul",[t("li",[l._v("插件要合理使用，不要使用一些冗余没有意义的插件，节约打包时间")]),l._v(" "),t("li",[l._v("要选择性能比较好，官方推荐，社区认可的插件，提高可靠性和打包速度")])])]),l._v(" "),t("li",[l._v("4.resolve参数合理配置\n"),t("ul",[t("li",[l._v("要合理使用，而不要过多使用，过多的文件查找也会降低webpack的打包速度")])]),l._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[l._v("resolve:{ //文件查找，方便写代码，但不能配置过多，因为文件查找也会消耗性能的\n  extensions: ['js', 'jsx'], // 默认的路径后缀\n  mainFiles: ['index', 'child'],\n  alias: { // 路径别名\n    '@' : path.resolve(__dirname, './src')\n  }\n},\n")])])])]),l._v(" "),t("li",[l._v("5.使用DIIPlugin提高打包速度\n"),t("ul",[t("li",[l._v("在引入第三方模块时，每一次引入都要对第三方模块做分析，这样会消耗webpack的打包性能")]),l._v(" "),t("li",[l._v("所以我们可以在第一次打包时，把这些第三方模块，打包到一个单独的文件dll中，之后再打包时，直接从dll文件中去引入这些第三方模块即可")]),l._v(" "),t("li",[l._v("第一步：配置webapck.dll.js,打包第三方模块的配置文件，利用webpack.DllPlugin插件生成manifest.json这个映射文件")]),l._v(" "),t("li",[l._v("第二步：在webpack.common.js中利用 ??")])])]),l._v(" "),t("li",[l._v("6.控制包文件大小\n"),t("ul",[t("li",[l._v("tree shaking")]),l._v(" "),t("li",[l._v("import()动态引入")]),l._v(" "),t("li",[l._v("splitChunks做代码分隔")])])]),l._v(" "),t("li",[t("ol",{attrs:{start:"7"}},[t("li",[l._v("thread-loader, parallel-webpack, happypack多进程打包")])])]),l._v(" "),t("li",[t("ol",{attrs:{start:"8"}},[t("li",[l._v("合理使用sourceMap")])]),l._v(" "),t("ul",[t("li",[l._v("打包生成的sourceMap越详细，打包速度就越慢")])])]),l._v(" "),t("li",[t("ol",{attrs:{start:"9"}},[t("li",[l._v("结合stats分析打包结果")])])]),l._v(" "),t("li",[t("ol",{attrs:{start:"10"}},[t("li",[l._v("开发环境内存编译")])])]),l._v(" "),t("li",[t("ol",{attrs:{start:"11"}},[t("li",[l._v("开发环境无用插件剔除")])])])])])}),[],!1,null,null,null);a.default=s.exports}}]);